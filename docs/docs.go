// Package docs GENERATED BY SWAG; DO NOT EDIT
// This file was generated by swaggo/swag
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/addons": {
            "get": {
                "description": "List all addons.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addons"
                ],
                "summary": "List all addons.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Addon"
                            }
                        }
                    }
                }
            }
        },
        "/addons/{name}": {
            "get": {
                "description": "Get an addon by name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "addons"
                ],
                "summary": "Get an addon by name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Addon name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Addon"
                        }
                    }
                }
            }
        },
        "/adoptionplans": {
            "post": {
                "description": "Graph generates an application dependency graph arranged in topological order.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "adoptionplans"
                ],
                "summary": "Generate an application dependency graph arranged in topological order.",
                "parameters": [
                    {
                        "type": "array",
                        "description": "requested App IDs",
                        "name": "requestedApps",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.DependencyGraph"
                        }
                    }
                }
            }
        },
        "/applications": {
            "get": {
                "description": "List all applications.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "List all applications.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Application"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an application.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Create an application.",
                "parameters": [
                    {
                        "description": "Application data",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Application"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Application"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete applications.",
                "tags": [
                    "applications"
                ],
                "summary": "Delete a applications.",
                "parameters": [
                    {
                        "description": "List of id",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "integer"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/applications/{id}": {
            "get": {
                "description": "Get an application by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Get an application by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Application"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an application.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Update an application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Application data",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Application"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete an application.",
                "tags": [
                    "applications"
                ],
                "summary": "Delete an application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/applications/{id}/bucket/{wildcard}": {
            "get": {
                "description": "Get bucket content by ID and path.\nReturns index.html for directories when Accept=text/html else a tarball.\n?filter=glob supports directory content filtering.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Get bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Upload bucket content by ID and path (handles both [post] and [put] requests).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Upload bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete bucket content by ID and path.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Delete bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/applications/{id}/facts": {
            "get": {
                "description": "List facts.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "List facts.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Fact"
                            }
                        }
                    }
                }
            }
        },
        "/applications/{id}/facts/{key}": {
            "put": {
                "description": "Update (or create) a fact.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Update (or create) a fact.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fact key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fact data",
                        "name": "fact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Fact"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "post": {
                "description": "Create a fact.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Create a fact.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fact key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Fact data",
                        "name": "fact",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Fact"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "Delete a fact.",
                "tags": [
                    "applications"
                ],
                "summary": "Delete a fact.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fact key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/applications/{id}/facts/{name}": {
            "get": {
                "description": "Get fact by name.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Get fact by name.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Fact key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Fact"
                        }
                    }
                }
            }
        },
        "/applications/{id}/stakeholders": {
            "patch": {
                "description": "Update the owner and contributors of an Application.",
                "tags": [
                    "applications"
                ],
                "summary": "Update the owner and contributors of an Application.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Application stakeholders",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Stakeholders"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/applications/{id}/tags": {
            "patch": {
                "description": "Replace tag associations.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "Replace tag associations.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Source",
                        "name": "source",
                        "in": "query"
                    },
                    {
                        "description": "Tag references",
                        "name": "tags",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TagRef"
                            }
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/applications/{id}/tags/id": {
            "get": {
                "description": "List tag references.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "applications"
                ],
                "summary": "List tag references.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Ref"
                            }
                        }
                    }
                }
            }
        },
        "/applications/{id}/tags/{sid}": {
            "delete": {
                "description": "Ensure tag is not associated with the application.",
                "tags": [
                    "applications"
                ],
                "summary": "Delete tag association.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Application ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "sid",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "description": "Login and obtain a bearer token.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Login and obtain a bearer token.",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Login"
                        }
                    }
                }
            }
        },
        "/buckets": {
            "get": {
                "description": "List all buckets.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "List all buckets.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Bucket"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a bucket.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Create a bucket.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                }
            }
        },
        "/buckets/{id}": {
            "get": {
                "description": "Get a bucket by ID.\nReturns api.Bucket when Accept=application/json.\nElse returns index.html when Accept=text/html.\nElse returns tarball.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Get a bucket by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Bucket"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a bucket.",
                "tags": [
                    "buckets"
                ],
                "summary": "Delete a bucket.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/buckets/{id}/{wildcard}": {
            "get": {
                "description": "Get bucket content by ID and path.\nWhen path is FILE, returns file content.\nWhen path is DIRECTORY and Accept=text/html returns index.html.\n?filter=glob supports directory content filtering.\nElse returns a tarball.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Get bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Upload bucket content by ID and path (handles both [post] and [put] requests).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Upload bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete bucket content by ID and path.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "buckets"
                ],
                "summary": "Delete bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bucket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/businessservices": {
            "get": {
                "description": "List all business services.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "businessservices"
                ],
                "summary": "List all business services.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a business service.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "businessservices"
                ],
                "summary": "Create a business service.",
                "parameters": [
                    {
                        "description": "Business service data",
                        "name": "business_service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                }
            }
        },
        "/businessservices/{id}": {
            "get": {
                "description": "Get a business service by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "businessservices"
                ],
                "summary": "Get a business service by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business Service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a business service.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "businessservices"
                ],
                "summary": "Update a business service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Business service data",
                        "name": "business_service",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.BusinessService"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a business service.",
                "tags": [
                    "businessservices"
                ],
                "summary": "Delete a business service.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Business service ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/cache": {
            "delete": {
                "description": "Delete a directory within the cache.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cache"
                ],
                "summary": "Delete a directory within the cache.",
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/caches/{id}": {
            "get": {
                "description": "Get the cache.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cache"
                ],
                "summary": "Get the cache.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Cache DIR",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Cache"
                        }
                    }
                }
            }
        },
        "/dependencies": {
            "get": {
                "description": "List all dependencies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dependencies"
                ],
                "summary": "List all dependencies.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Dependency"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a dependency.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dependencies"
                ],
                "summary": "Create a dependency.",
                "parameters": [
                    {
                        "description": "Dependency data",
                        "name": "applications_dependency",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Dependency"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Dependency"
                        }
                    }
                }
            }
        },
        "/dependencies/{id}": {
            "get": {
                "description": "Get a dependency by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "dependencies"
                ],
                "summary": "Get a dependency by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dependency ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Dependency"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a dependency.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "dependencies"
                ],
                "summary": "Delete a dependency.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Dependency id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/files": {
            "get": {
                "description": "List all files.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "List all files.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.File"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a file.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Create a file.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.File"
                        }
                    }
                }
            }
        },
        "/files/{id}": {
            "get": {
                "description": "Get a file by ID. Returns api.File when Accept=application/json else the file content.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Get a file by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.File"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a file.",
                "tags": [
                    "file"
                ],
                "summary": "Delete a file.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "File ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/identities": {
            "get": {
                "description": "List all identities.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identities"
                ],
                "summary": "List all identities.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Identity"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an identity.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identities"
                ],
                "summary": "Create an identity.",
                "parameters": [
                    {
                        "description": "Identity data",
                        "name": "identity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                }
            }
        },
        "/identities/{id}": {
            "get": {
                "description": "Get an identity by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "identities"
                ],
                "summary": "Get an identity by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an identity.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "identities"
                ],
                "summary": "Update an identity.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Identity data",
                        "name": "identity",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Identity"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete an identity.",
                "tags": [
                    "identities"
                ],
                "summary": "Delete an identity.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Identity ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/imports": {
            "get": {
                "description": "List imports.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "imports"
                ],
                "summary": "List imports.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Import"
                            }
                        }
                    }
                }
            }
        },
        "/imports/{id}": {
            "get": {
                "description": "Get an import by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "imports"
                ],
                "summary": "Get an import by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Import ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Import"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an import. This leaves any created application or dependency.",
                "tags": [
                    "imports"
                ],
                "summary": "Delete an import.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Import ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/importsummaries": {
            "get": {
                "description": "List import summaries.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "imports"
                ],
                "summary": "List import summaries.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.ImportSummary"
                            }
                        }
                    }
                }
            }
        },
        "/importsummaries/download": {
            "get": {
                "description": "Export the source CSV for a particular import summary.",
                "produces": [
                    "text/csv"
                ],
                "tags": [
                    "imports"
                ],
                "summary": "Export the source CSV for a particular import summary.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ImportSummary ID",
                        "name": "importSummary.id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "file"
                        }
                    }
                }
            }
        },
        "/importsummaries/upload": {
            "post": {
                "description": "Upload a CSV containing applications and dependencies to import.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "imports"
                ],
                "summary": "Upload a CSV containing applications and dependencies to import.",
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.ImportSummary"
                        }
                    }
                }
            }
        },
        "/importsummaries/{id}": {
            "get": {
                "description": "Get an import by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "imports"
                ],
                "summary": "Get an import summary by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ImportSummary ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.ImportSummary"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an import summary and associated import records.",
                "tags": [
                    "imports"
                ],
                "summary": "Delete an import summary and associated import records.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "ImportSummary ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/jobfunctions": {
            "get": {
                "description": "List all job functions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobfunctions"
                ],
                "summary": "List all job functions.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.JobFunction"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a job function.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobfunctions"
                ],
                "summary": "Create a job function.",
                "parameters": [
                    {
                        "description": "Job Function data",
                        "name": "job_function",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.JobFunction"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.JobFunction"
                        }
                    }
                }
            }
        },
        "/jobfunctions/{id}": {
            "get": {
                "description": "Get a job function by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "jobfunctions"
                ],
                "summary": "Get a job function by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Function ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.JobFunction"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a job function.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "jobfunctions"
                ],
                "summary": "Update a job function.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Function ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Job Function data",
                        "name": "job_function",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.JobFunction"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a job function.",
                "tags": [
                    "jobfunctions"
                ],
                "summary": "Delete a job function.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Job Function ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/migrationwaves": {
            "get": {
                "description": "List all migration waves.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "migrationwaves"
                ],
                "summary": "List all migration waves.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.MigrationWave"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a migration wave.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "migrationwaves"
                ],
                "summary": "Create a migration wave.",
                "parameters": [
                    {
                        "description": "Migration Wave data",
                        "name": "migrationwave",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MigrationWave"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.MigrationWave"
                        }
                    }
                }
            }
        },
        "/migrationwaves/{id}": {
            "get": {
                "description": "Get a migration wave by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "migrationwaves"
                ],
                "summary": "Get aa migration wave by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Migration Wave ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.MigrationWave"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a migration wave.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "migrationwaves"
                ],
                "summary": "Update a migration wave.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MigrationWave id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "MigrationWave data",
                        "name": "migrationWave",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MigrationWave"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a migration wave.",
                "tags": [
                    "migrationwaves"
                ],
                "summary": "Delete a migration wave.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "MigrationWave id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/proxies": {
            "get": {
                "description": "List all proxies.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxies"
                ],
                "summary": "List all proxies.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Proxy"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create an proxy.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxies"
                ],
                "summary": "Create an proxy.",
                "parameters": [
                    {
                        "description": "Proxy data",
                        "name": "proxy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Proxy"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Proxy"
                        }
                    }
                }
            }
        },
        "/proxies/{id}": {
            "get": {
                "description": "Get an proxy by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "proxies"
                ],
                "summary": "Get an proxy by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Proxy"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an proxy.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "proxies"
                ],
                "summary": "Update an proxy.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Proxy data",
                        "name": "proxy",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Proxy"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete an proxy.",
                "tags": [
                    "proxies"
                ],
                "summary": "Delete an proxy.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Proxy ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/reviews": {
            "get": {
                "description": "List all reviews.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "List all reviews.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Review"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a review.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Create a review.",
                "parameters": [
                    {
                        "description": "Review data",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Review"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Review"
                        }
                    }
                }
            }
        },
        "/reviews/copy": {
            "post": {
                "description": "Copy a review from one application to others.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Copy a review from one application to others.",
                "parameters": [
                    {
                        "description": "Review copy request data",
                        "name": "copy_request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.CopyRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/reviews/{id}": {
            "get": {
                "description": "Get a review by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Get a review by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Review"
                            }
                        }
                    }
                }
            },
            "put": {
                "description": "Update a review.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "Update a review.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Review data",
                        "name": "review",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Review"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a review.",
                "tags": [
                    "reviews"
                ],
                "summary": "Delete a review.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/rulebundles": {
            "get": {
                "description": "List all bindings.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rulebundles"
                ],
                "summary": "List all bindings.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.RuleBundle"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a bundle.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rulebundles"
                ],
                "summary": "Create a bundle.",
                "parameters": [
                    {
                        "description": "RuleBundle data",
                        "name": "ruleBundle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RuleBundle"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.RuleBundle"
                        }
                    }
                }
            }
        },
        "/rulebundles/{id}": {
            "get": {
                "description": "Get a RuleBundle by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "rulebundles"
                ],
                "summary": "Get a RuleBundle by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RuleBundle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.RuleBundle"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a bundle.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "rulebundles"
                ],
                "summary": "Update a bundle.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RuleBundle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "RuleBundle data",
                        "name": "ruleBundle",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RuleBundle"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a bundle.",
                "tags": [
                    "rulebundles"
                ],
                "summary": "Delete a bundle.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "RuleBundle ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/schema": {
            "get": {
                "description": "Get the API schema.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "schema"
                ],
                "summary": "Get the API schema.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Schema"
                        }
                    }
                }
            }
        },
        "/settings": {
            "get": {
                "description": "List all settings.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "List all settings.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Setting"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a setting.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Create a setting.",
                "parameters": [
                    {
                        "description": "Setting data",
                        "name": "setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Setting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Setting"
                        }
                    }
                }
            }
        },
        "/settings/{key}": {
            "get": {
                "description": "Get a setting by its key.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Get a setting by its key.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Setting"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a setting.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Update a setting.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "post": {
                "description": "Create a setting.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "settings"
                ],
                "summary": "Create a setting.",
                "parameters": [
                    {
                        "description": "Setting value",
                        "name": "setting",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Setting"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                }
            },
            "delete": {
                "description": "Delete a setting.",
                "tags": [
                    "settings"
                ],
                "summary": "Delete a setting.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key",
                        "name": "key",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/stakeholdergroups": {
            "get": {
                "description": "List all stakeholder groups.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stakeholdergroups"
                ],
                "summary": "List all stakeholder groups.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.StakeholderGroup"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a stakeholder group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stakeholdergroups"
                ],
                "summary": "Create a stakeholder group.",
                "parameters": [
                    {
                        "description": "Stakeholder Group data",
                        "name": "stakeholder_group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StakeholderGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.StakeholderGroup"
                        }
                    }
                }
            }
        },
        "/stakeholdergroups/{id}": {
            "get": {
                "description": "Get a stakeholder group by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stakeholdergroups"
                ],
                "summary": "Get a stakeholder group by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.StakeholderGroup"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a stakeholder group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "stakeholdergroups"
                ],
                "summary": "Update a stakeholder group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stakeholder Group data",
                        "name": "stakeholder_group",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.StakeholderGroup"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a stakeholder group.",
                "tags": [
                    "stakeholdergroups"
                ],
                "summary": "Delete a stakeholder group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder Group ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/stakeholders": {
            "get": {
                "description": "List all stakeholders.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stakeholders"
                ],
                "summary": "List all stakeholders.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Stakeholder"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a stakeholder.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stakeholders"
                ],
                "summary": "Create a stakeholder.",
                "parameters": [
                    {
                        "description": "Stakeholder data",
                        "name": "stakeholder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Stakeholder"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Stakeholder"
                        }
                    }
                }
            }
        },
        "/stakeholders/{id}": {
            "get": {
                "description": "Get a stakeholder by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stakeholders"
                ],
                "summary": "Get a stakeholder by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Stakeholder"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a stakeholder.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "stakeholders"
                ],
                "summary": "Update a stakeholder.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Stakeholder data",
                        "name": "stakeholder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Stakeholder"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a stakeholder.",
                "tags": [
                    "stakeholders"
                ],
                "summary": "Delete a stakeholder.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Stakeholder ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tagcategories": {
            "get": {
                "description": "List all tag categories.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tagcategories"
                ],
                "summary": "List all tag categories.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Optional category name filter",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TagCategory"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a tag category.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tagcategories"
                ],
                "summary": "Create a tag category.",
                "parameters": [
                    {
                        "description": "Tag Category data",
                        "name": "tag_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TagCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.TagCategory"
                        }
                    }
                }
            }
        },
        "/tagcategories/{id}": {
            "get": {
                "description": "Get a tag category by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tagcategories"
                ],
                "summary": "Get a tag category by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TagCategory"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a tag category.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tagcategories"
                ],
                "summary": "Update a tag category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag Category data",
                        "name": "tag_type",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TagCategory"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a tag category.",
                "tags": [
                    "tagcategories"
                ],
                "summary": "Delete a tag category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tagcategories/{id}/tags": {
            "get": {
                "description": "List the tags in the tag category.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tagcategories"
                ],
                "summary": "List the tags in the tag category.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag Category ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Optional tag name filter",
                        "name": "name",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Tag"
                            }
                        }
                    }
                }
            }
        },
        "/tags": {
            "get": {
                "description": "List all tags.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "List all tags.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Tag"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a tag.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Create a tag.",
                "parameters": [
                    {
                        "description": "Tag data",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Tag"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Tag"
                        }
                    }
                }
            }
        },
        "/tags/{id}": {
            "get": {
                "description": "Get a tag by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Get a tag by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Tag"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a tag.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tags"
                ],
                "summary": "Update a tag.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tag data",
                        "name": "tag",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Tag"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a tag.",
                "tags": [
                    "tags"
                ],
                "summary": "Delete a tag.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tag ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/taskgroups": {
            "get": {
                "description": "List all task groups.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taskgroups"
                ],
                "summary": "List all task groups.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.TaskGroup"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a task group.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taskgroups"
                ],
                "summary": "Create a task group.",
                "parameters": [
                    {
                        "description": "TaskGroup data",
                        "name": "taskgroup",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TaskGroup"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.TaskGroup"
                        }
                    }
                }
            }
        },
        "/taskgroups/{id}": {
            "get": {
                "description": "Get a task group by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taskgroups"
                ],
                "summary": "Get a task group by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TaskGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TaskGroup"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a task group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "taskgroups"
                ],
                "summary": "Update a task group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TaskGroup"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a task group.",
                "tags": [
                    "taskgroups"
                ],
                "summary": "Delete a task group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TaskGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/taskgroups/{id}/bucket/{wildcard}": {
            "get": {
                "description": "Get bucket content by ID and path.\nReturns index.html for directories when Accept=text/html else a tarball.\n?filter=glob supports directory content filtering.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "taskgroups"
                ],
                "summary": "Get bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TaskGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Upload bucket content by ID and path (handles both [post] and [put] requests).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taskgroups"
                ],
                "summary": "Upload bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TaskGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete bucket content by ID and path.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "taskgroups"
                ],
                "summary": "Delete bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/taskgroups/{id}/submit": {
            "put": {
                "description": "Submit a task group.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "taskgroups"
                ],
                "summary": "Submit a task group.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "TaskGroup ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TaskGroup data (optional)",
                        "name": "taskgroup",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.TaskGroup"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tasks": {
            "get": {
                "description": "List all tasks.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "List all tasks.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Task"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a task.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a task.",
                "parameters": [
                    {
                        "description": "Task data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                }
            }
        },
        "/tasks/{id}": {
            "get": {
                "description": "Get a task by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get a task by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a task.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update a task.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a task.",
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a task.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tasks/{id}/bucket/{wildcard}": {
            "get": {
                "description": "Get bucket content by ID and path.\nReturns index.html for directories when Accept=text/html else a tarball.\n?filter=glob supports directory content filtering.",
                "produces": [
                    "application/octet-stream"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Get bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Filter",
                        "name": "filter",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            },
            "post": {
                "description": "Upload bucket content by ID and path (handles both [post] and [put] requests).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Upload bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete bucket content by ID and path.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete bucket content by ID and path.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tasks/{id}/cancel": {
            "put": {
                "description": "Cancel a task.",
                "tags": [
                    "tasks"
                ],
                "summary": "Cancel a task.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tasks/{id}/report": {
            "put": {
                "description": "Update a task report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Update a task report.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TaskReport data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TaskReport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.TaskReport"
                        }
                    }
                }
            },
            "post": {
                "description": "Update a task report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Create a task report.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "TaskReport data",
                        "name": "task",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.TaskReport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.TaskReport"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a task report.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Delete a task report.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tasks/{id}/submit": {
            "put": {
                "description": "Submit a task.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "tasks"
                ],
                "summary": "Submit a task.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Task data (optional)",
                        "name": "task",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/api.Task"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/tickets": {
            "get": {
                "description": "List all tickets.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "List all tickets.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Ticket"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a ticket.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "Create a ticket.",
                "parameters": [
                    {
                        "description": "Ticket data",
                        "name": "ticket",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Ticket"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Ticket"
                        }
                    }
                }
            }
        },
        "/tickets/{id}": {
            "get": {
                "description": "Get a ticket by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "tickets"
                ],
                "summary": "Get a ticket by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Ticket ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Ticket"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a ticket.",
                "tags": [
                    "tickets"
                ],
                "summary": "Delete a ticket.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Ticket id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        },
        "/trackers": {
            "get": {
                "description": "List all trackers.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trackers"
                ],
                "summary": "List all trackers.",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Tracker"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a tracker.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trackers"
                ],
                "summary": "Create a tracker.",
                "parameters": [
                    {
                        "description": "Tracker data",
                        "name": "tracker",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Tracker"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/api.Tracker"
                        }
                    }
                }
            }
        },
        "/trackers/{id}": {
            "get": {
                "description": "Get a tracker by ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "trackers"
                ],
                "summary": "Get a tracker by ID.",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Tracker ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/api.Tracker"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a tracker.",
                "consumes": [
                    "application/json"
                ],
                "tags": [
                    "trackers"
                ],
                "summary": "Update a tracker.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tracker id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Tracker data",
                        "name": "application",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.Tracker"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            },
            "delete": {
                "description": "Delete a tracker.",
                "tags": [
                    "trackers"
                ],
                "summary": "Delete a tracker.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Tracker id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                }
            }
        }
    },
    "definitions": {
        "api.Addon": {
            "type": "object",
            "properties": {
                "image": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Application": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "binary": {
                    "type": "string"
                },
                "bucket": {
                    "$ref": "#/definitions/api.Ref"
                },
                "businessService": {
                    "$ref": "#/definitions/api.Ref"
                },
                "comments": {
                    "type": "string"
                },
                "contributors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "facts": {
                    "$ref": "#/definitions/api.FactMap"
                },
                "id": {
                    "type": "integer"
                },
                "identities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "migrationWave": {
                    "$ref": "#/definitions/api.Ref"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/api.Ref"
                },
                "repository": {
                    "$ref": "#/definitions/api.Repository"
                },
                "review": {
                    "$ref": "#/definitions/api.Ref"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.TagRef"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Bucket": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "path": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.BusinessService": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "owner": {
                    "$ref": "#/definitions/api.Ref"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Cache": {
            "type": "object",
            "properties": {
                "capacity": {
                    "type": "string"
                },
                "exists": {
                    "type": "boolean"
                },
                "path": {
                    "type": "string"
                },
                "used": {
                    "type": "string"
                }
            }
        },
        "api.CopyRequest": {
            "type": "object",
            "required": [
                "sourceReview",
                "targetApplications"
            ],
            "properties": {
                "sourceReview": {
                    "type": "integer"
                },
                "targetApplications": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            }
        },
        "api.Dependency": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "from": {
                    "$ref": "#/definitions/api.Ref"
                },
                "id": {
                    "type": "integer"
                },
                "to": {
                    "$ref": "#/definitions/api.Ref"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.DependencyGraph": {
            "type": "object"
        },
        "api.Fact": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "api.FactMap": {
            "type": "object",
            "additionalProperties": true
        },
        "api.Fields": {
            "type": "object",
            "additionalProperties": true
        },
        "api.File": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "expiration": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Identity": {
            "type": "object",
            "required": [
                "kind",
                "name"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "key": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "settings": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "api.Import": {
            "type": "object",
            "additionalProperties": true
        },
        "api.ImportSummary": {
            "type": "object",
            "properties": {
                "createEntities": {
                    "type": "boolean"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "filename": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "importStatus": {
                    "type": "string"
                },
                "importTime": {
                    "type": "string"
                },
                "invalidCount": {
                    "type": "integer"
                },
                "updateUser": {
                    "type": "string"
                },
                "validCount": {
                    "type": "integer"
                }
            }
        },
        "api.JobFunction": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stakeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Login": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "api.Metadata": {
            "type": "object",
            "additionalProperties": true
        },
        "api.MigrationWave": {
            "type": "object",
            "properties": {
                "applications": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "endDate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "stakeholderGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "stakeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "startDate": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Proxy": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "enabled": {
                    "type": "boolean"
                },
                "excluded": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "host": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identity": {
                    "$ref": "#/definitions/api.Ref"
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "http",
                        "https"
                    ]
                },
                "port": {
                    "type": "integer"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Ref": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "api.Repository": {
            "type": "object",
            "properties": {
                "branch": {
                    "type": "string"
                },
                "kind": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "tag": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        },
        "api.Review": {
            "type": "object",
            "required": [
                "application"
            ],
            "properties": {
                "application": {
                    "$ref": "#/definitions/api.Ref"
                },
                "businessCriticality": {
                    "type": "integer"
                },
                "comments": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "effortEstimate": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "proposedAction": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                },
                "workPriority": {
                    "type": "integer"
                }
            }
        },
        "api.RuleBundle": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "custom": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identity": {
                    "$ref": "#/definitions/api.Ref"
                },
                "image": {
                    "$ref": "#/definitions/api.Ref"
                },
                "kind": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "repository": {
                    "$ref": "#/definitions/api.Repository"
                },
                "rulesets": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.RuleSet"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.RuleSet": {
            "type": "object",
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "file": {
                    "$ref": "#/definitions/api.Ref"
                },
                "id": {
                    "type": "integer"
                },
                "metadata": {},
                "name": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Schema": {
            "type": "object",
            "properties": {
                "paths": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "version": {
                    "type": "string"
                }
            }
        },
        "api.Setting": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {}
            }
        },
        "api.Stakeholder": {
            "type": "object",
            "required": [
                "email",
                "name"
            ],
            "properties": {
                "businessServices": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "contributes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "jobFunction": {
                    "$ref": "#/definitions/api.Ref"
                },
                "migrationWaves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "name": {
                    "type": "string"
                },
                "owns": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "stakeholderGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.StakeholderGroup": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "migrationWaves": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "name": {
                    "type": "string"
                },
                "stakeholders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Stakeholders": {
            "type": "object",
            "properties": {
                "contributors": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "owner": {
                    "$ref": "#/definitions/api.Ref"
                }
            }
        },
        "api.TTL": {
            "type": "object",
            "properties": {
                "created": {
                    "type": "integer"
                },
                "failed": {
                    "type": "integer"
                },
                "pending": {
                    "type": "integer"
                },
                "postponed": {
                    "type": "integer"
                },
                "running": {
                    "type": "integer"
                },
                "succeeded": {
                    "type": "integer"
                }
            }
        },
        "api.Tag": {
            "type": "object",
            "required": [
                "category",
                "name"
            ],
            "properties": {
                "category": {
                    "$ref": "#/definitions/api.Ref"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.TagCategory": {
            "type": "object",
            "required": [
                "name"
            ],
            "properties": {
                "colour": {
                    "type": "string"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "rank": {
                    "type": "integer"
                },
                "tags": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Ref"
                    }
                },
                "updateUser": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "api.TagRef": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "source": {
                    "type": "string"
                }
            }
        },
        "api.Task": {
            "type": "object",
            "required": [
                "addon",
                "data"
            ],
            "properties": {
                "addon": {
                    "type": "string"
                },
                "application": {
                    "$ref": "#/definitions/api.Ref"
                },
                "bucket": {
                    "$ref": "#/definitions/api.Ref"
                },
                "canceled": {
                    "type": "boolean"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "image": {
                    "type": "string"
                },
                "locator": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pod": {
                    "type": "string"
                },
                "policy": {
                    "type": "string"
                },
                "priority": {
                    "type": "integer"
                },
                "purged": {
                    "type": "boolean"
                },
                "report": {
                    "$ref": "#/definitions/api.TaskReport"
                },
                "retries": {
                    "type": "integer"
                },
                "started": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "terminated": {
                    "type": "string"
                },
                "ttl": {
                    "$ref": "#/definitions/api.TTL"
                },
                "updateUser": {
                    "type": "string"
                },
                "variant": {
                    "type": "string"
                }
            }
        },
        "api.TaskGroup": {
            "type": "object",
            "required": [
                "data"
            ],
            "properties": {
                "addon": {
                    "type": "string"
                },
                "bucket": {
                    "$ref": "#/definitions/api.Ref"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "tasks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/api.Task"
                    }
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.TaskReport": {
            "type": "object",
            "properties": {
                "activity": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "completed": {
                    "type": "integer"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "error": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "result": {
                    "type": "object"
                },
                "status": {
                    "type": "string"
                },
                "task": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Ticket": {
            "type": "object",
            "required": [
                "application",
                "kind",
                "parent",
                "tracker"
            ],
            "properties": {
                "application": {
                    "$ref": "#/definitions/api.Ref"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "error": {
                    "type": "boolean"
                },
                "fields": {
                    "$ref": "#/definitions/api.Fields"
                },
                "id": {
                    "type": "integer"
                },
                "kind": {
                    "type": "string"
                },
                "lastUpdated": {
                    "type": "string"
                },
                "link": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "tracker": {
                    "$ref": "#/definitions/api.Ref"
                },
                "updateUser": {
                    "type": "string"
                }
            }
        },
        "api.Tracker": {
            "type": "object",
            "required": [
                "identity",
                "kind",
                "name",
                "url"
            ],
            "properties": {
                "connected": {
                    "type": "boolean"
                },
                "createTime": {
                    "type": "string"
                },
                "createUser": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "identity": {
                    "$ref": "#/definitions/api.Ref"
                },
                "insecure": {
                    "type": "boolean"
                },
                "kind": {
                    "type": "string",
                    "enum": [
                        "jira-cloud",
                        "jira-server",
                        "jira-datacenter"
                    ]
                },
                "lastUpdated": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "metadata": {
                    "$ref": "#/definitions/api.Metadata"
                },
                "name": {
                    "type": "string"
                },
                "updateUser": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
