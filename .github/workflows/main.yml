name: Build Hub

on:
  pull_request:
    paths-ignore:
      - '**.md'
  push:
    paths-ignore:
      - '**.md'

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - run: make fmt
  vet:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - run: make vet
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - run: make cmd
  build-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: make podman-build

  test-unit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - run: make test

  test-api:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.19'
      - run: |
          make vet
          DISCONNECTED=1 make run &
          sleep 15  # probably a dirty solution
          DISCONNECTED=1 HUB_BASE_URL=http://localhost:8080 make test-api
          DISCONNECTED=1 HUB_BASE_URL=http://localhost:8080 make test-api  # Intentionaly run 2x to catch data left in Hub DB.

  test-e2e:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: start-minikube
        uses: konveyor/tackle2-operator/.github/actions/start-minikube@main
      - name: Build image in minikube
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          make docker-build
      - name: install-tackle
        uses: konveyor/tackle2-operator/.github/actions/install-tackle@main
        with:
          tackle-hub-image: tackle2-hub:latest
          tackle-image-pull-policy: IfNotPresent

      - name: save image
        run: |
          IMG=quay.io/konveyor/tackle2-hub:latest make docker-build
          docker save -o /tmp/tackle2-hub.tar quay.io/konveyor/tackle2-hub:latest

      - name: Upload image as artifact
        uses: actions/upload-artifact@v3
        with:
          name: tackle2-hub
          path: /tmp/tackle2-hub.tar
          retention-days: 1

  test-integration:
    needs: test-e2e
    uses: konveyor/ci/.github/workflows/global-ci.yml@main
    with:
      component_name: tackle2-hub
      api_hub_tests_ref: ${{ github.ref }}
